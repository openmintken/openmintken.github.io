
import java.awt.Component;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.Stroke;
import java.awt.geom.GeneralPath;
import javax.swing.JComponent;
import javax.swing.JSlider;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.plaf.basic.BasicSliderUI;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 * Eine grafische Darstellung des MINT-Punktezaehlers
 * @author Joana Bergsiek
 * @version 1.1
 */
public class GUI extends javax.swing.JFrame {
    
    private final ArrayList<Aktivitaet> S1 = new ArrayList<>(); //Geltende Aktivitaeten; siehe initialisiereA3S1Combo und jButton1MouseClicked
    private final ArrayList<Aktivitaet> S2 = new ArrayList<>(); //Geltende Aktivitaeten; siehe initialisiereA3S2Combo und jButton1MouseClicked
    private final ArrayList<JComboBox> alleA3Boxen = new ArrayList<>();
    private final ArrayList<JSlider> alleA3Slider = new ArrayList<>();
    private Zertifikat zer;
    private final int[] reihenindexPuffer = new int[16]; //siehe reiheHervorheben
    private TableRowSorter<TableModel> rowSorter;
    //Diese Aktivitaeten sind nicht in der S1 absolvierbar
    private final ArrayList<String> KEINES1AKTIVITAETEN = new ArrayList(){ {add("Naturwissenschaftliche Profilklasse (Falls noch nicht in Anforderungsfeld I oder II eingebracht)");
        add("wissenshaftspropädeutisches Fach oder zusätzlicher MINT-Kurs durchgängig in der Qualifikationsphase belegt (s.o)");
        add("Fachwissenschaftliche Arbeit mit mindestens 10 Seiten oder besondere Lernleistung (s.o.)");
        add("MINT-AG SII");
    }}; 
    //Diese Aktivitaeten sind nicht in der S2 absolvierbar
    private final ArrayList<String> KEINES2AKTIVITAETEN = new ArrayList(){ {add("MINT-Wahl(pflicht)fach SI (2-3 Wochenstunden)/ Junior-Ingenieur-Akademie");
        add("MINT-AG SI");
    }}; 
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        
        initialisiereMeineElemente();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jSlider1 = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jSlider2 = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSlider3 = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jSlider4 = new javax.swing.JSlider();
        jSlider5 = new javax.swing.JSlider();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jSlider6 = new javax.swing.JSlider();
        jComboBox7 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jSlider7 = new javax.swing.JSlider();
        jComboBox8 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jSlider8 = new javax.swing.JSlider();
        jComboBox9 = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jSlider9 = new javax.swing.JSlider();
        jComboBox10 = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jSlider10 = new javax.swing.JSlider();
        jComboBox11 = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jSlider11 = new javax.swing.JSlider();
        jComboBox12 = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jSlider12 = new javax.swing.JSlider();
        jComboBox13 = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jSlider13 = new javax.swing.JSlider();
        jComboBox14 = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jSlider14 = new javax.swing.JSlider();
        jComboBox15 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jSlider15 = new javax.swing.JSlider();
        jComboBox16 = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jSlider16 = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        jFrame1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jFrame1.setForeground(java.awt.Color.lightGray);
        jFrame1.setLocation(new java.awt.Point(0, 0));
        jFrame1.setSize(new java.awt.Dimension(200, 200));

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jPopupMenu1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 10)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 10)); // NOI18N
        jMenuItem1.setText("Aktivität SI hinzufügen");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 10)); // NOI18N
        jMenuItem2.setText("Aktivität SII hinzufügen");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);
        jPopupMenu1.add(jSeparator1);

        jMenuItem3.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 10)); // NOI18N
        jMenuItem3.setText("Alle A3-Aktivitäten löschen");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MINTken Version 1.1 Joana Bergsiek");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 780));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Art der Aktivität", "Aktivität", "5 Punkte/ Niveau 1", "10 Punkte/ Niveau 2", "15 Punkte/ Niveau 3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jTable1.setName("Aktivitaetenliste"); // NOI18N
        jTable1.setRequestFocusEnabled(false);
        jTable1.setSelectionBackground(new java.awt.Color(157, 69, 73));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 480, 1280, 240));

        jLabel1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(93, 157, 69));
        jLabel1.setText("Anforderungsfeld II");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(157, 88, 69));
        jLabel2.setText("Anforderungsfeld III");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, -1, -1));

        jComboBox1.setBackground(new java.awt.Color(69, 127, 157));
        jComboBox1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 13)); // NOI18N
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 380, 50));

        jLabel3.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(69, 127, 157));
        jLabel3.setText("Anforderungsfeld I");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jComboBox2.setBackground(new java.awt.Color(93, 157, 69));
        jComboBox2.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 13)); // NOI18N
        jComboBox2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 380, 50));

        jSlider1.setMaximum(3);
        jSlider1.setMinimum(1);
        jSlider1.setValue(1);
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        getContentPane().add(jSlider1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, -1, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(69, 127, 157));
        jLabel4.setText("Niveau: 1");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        jSlider2.setMaximum(3);
        jSlider2.setMinimum(1);
        jSlider2.setValue(1);
        jSlider2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });
        getContentPane().add(jSlider2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 400, -1, -1));

        jLabel5.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(93, 157, 69));
        jLabel5.setText("Niveau: 1");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, -1, -1));

        jComboBox3.setBackground(new java.awt.Color(157, 69, 73));
        jComboBox3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox3.setName("3"); // NOI18N
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });
        jComboBox3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox3FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, 240, 30));

        jLabel6.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(157, 69, 73));
        jLabel6.setText("Erledigt in S I");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 40, -1, -1));

        jLabel7.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(157, 69, 73));
        jLabel7.setText("(Unter- und Mittelstufe)");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 60, -1, -1));

        jLabel8.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(157, 107, 69));
        jLabel8.setText("S II");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 40, -1, -1));

        jLabel9.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(157, 107, 69));
        jLabel9.setText("(Oberstufe)");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 60, -1, -1));

        jSlider3.setMaximum(3);
        jSlider3.setMinimum(1);
        jSlider3.setValue(1);
        jSlider3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider3StateChanged(evt);
            }
        });
        getContentPane().add(jSlider3, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 90, 130, 20));

        jLabel10.setForeground(new java.awt.Color(157, 69, 73));
        jLabel10.setText("Niveau: 1");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 110, -1, -1));

        jLabel11.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 10)); // NOI18N
        jLabel11.setText("Die Länge einer Spalte an den Grenzen im Header verändern. Durch Drag&Drop Spalten verschieben. Durch einen Klick auf eine Spalte Tabelle nach dieser alph. sortieren.");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, -1, -1));

        jComboBox4.setBackground(new java.awt.Color(157, 69, 73));
        jComboBox4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox4.setName("4"); // NOI18N
        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });
        jComboBox4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox4FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 140, 240, 30));

        jLabel12.setForeground(new java.awt.Color(157, 69, 73));
        jLabel12.setText("Niveau: 1");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 160, -1, -1));

        jSlider4.setMaximum(3);
        jSlider4.setMinimum(1);
        jSlider4.setValue(1);
        jSlider4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider4StateChanged(evt);
            }
        });
        getContentPane().add(jSlider4, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 140, 130, 20));

        jSlider5.setMaximum(3);
        jSlider5.setMinimum(1);
        jSlider5.setValue(1);
        jSlider5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider5StateChanged(evt);
            }
        });
        getContentPane().add(jSlider5, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 190, 130, 20));

        jComboBox5.setBackground(new java.awt.Color(157, 69, 73));
        jComboBox5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox5.setName("5"); // NOI18N
        jComboBox5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox5ItemStateChanged(evt);
            }
        });
        jComboBox5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox5FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 190, 240, 30));

        jLabel13.setForeground(new java.awt.Color(157, 69, 73));
        jLabel13.setText("Niveau: 1");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 210, -1, -1));

        jComboBox6.setBackground(new java.awt.Color(157, 69, 73));
        jComboBox6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox6.setName("6"); // NOI18N
        jComboBox6.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox6ItemStateChanged(evt);
            }
        });
        jComboBox6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox6FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 240, 240, 30));

        jLabel14.setForeground(new java.awt.Color(157, 69, 73));
        jLabel14.setText("Niveau: 1");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 260, -1, -1));

        jSlider6.setMaximum(3);
        jSlider6.setMinimum(1);
        jSlider6.setValue(1);
        jSlider6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider6StateChanged(evt);
            }
        });
        getContentPane().add(jSlider6, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 240, 130, 20));

        jComboBox7.setBackground(new java.awt.Color(157, 69, 73));
        jComboBox7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox7.setName("7"); // NOI18N
        jComboBox7.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox7ItemStateChanged(evt);
            }
        });
        jComboBox7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox7FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox7, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 290, 240, 30));

        jLabel15.setForeground(new java.awt.Color(157, 69, 73));
        jLabel15.setText("Niveau: 1");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 310, -1, -1));

        jSlider7.setMaximum(3);
        jSlider7.setMinimum(1);
        jSlider7.setValue(1);
        jSlider7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider7.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider7StateChanged(evt);
            }
        });
        getContentPane().add(jSlider7, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 290, 130, 20));

        jComboBox8.setBackground(new java.awt.Color(157, 69, 73));
        jComboBox8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox8.setName("8"); // NOI18N
        jComboBox8.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox8ItemStateChanged(evt);
            }
        });
        jComboBox8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox8FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox8, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 340, 240, 30));

        jLabel16.setForeground(new java.awt.Color(157, 69, 73));
        jLabel16.setText("Niveau: 1");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 360, -1, -1));

        jSlider8.setMaximum(3);
        jSlider8.setMinimum(1);
        jSlider8.setValue(1);
        jSlider8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider8.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider8StateChanged(evt);
            }
        });
        getContentPane().add(jSlider8, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 340, 130, 20));

        jComboBox9.setBackground(new java.awt.Color(157, 69, 73));
        jComboBox9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox9.setName("9"); // NOI18N
        jComboBox9.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox9ItemStateChanged(evt);
            }
        });
        jComboBox9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox9FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox9, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 240, 30));

        jLabel17.setForeground(new java.awt.Color(157, 69, 73));
        jLabel17.setText("Niveau: 1");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 410, -1, -1));

        jSlider9.setMaximum(3);
        jSlider9.setMinimum(1);
        jSlider9.setValue(1);
        jSlider9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider9.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider9StateChanged(evt);
            }
        });
        getContentPane().add(jSlider9, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 390, 130, 20));

        jComboBox10.setBackground(new java.awt.Color(157, 107, 69));
        jComboBox10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox10.setName("10"); // NOI18N
        jComboBox10.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox10ItemStateChanged(evt);
            }
        });
        jComboBox10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox10FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox10, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 390, 240, 30));

        jLabel18.setForeground(new java.awt.Color(157, 107, 69));
        jLabel18.setText("Niveau: 1");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 410, -1, -1));

        jSlider10.setMaximum(3);
        jSlider10.setMinimum(1);
        jSlider10.setValue(1);
        jSlider10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider10.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider10StateChanged(evt);
            }
        });
        getContentPane().add(jSlider10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 390, 130, 20));

        jComboBox11.setBackground(new java.awt.Color(157, 107, 69));
        jComboBox11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox11.setName("11"); // NOI18N
        jComboBox11.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox11ItemStateChanged(evt);
            }
        });
        jComboBox11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox11FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox11, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 340, 240, 30));

        jLabel19.setForeground(new java.awt.Color(157, 107, 69));
        jLabel19.setText("Niveau: 1");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 360, -1, -1));

        jSlider11.setMaximum(3);
        jSlider11.setMinimum(1);
        jSlider11.setValue(1);
        jSlider11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider11.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider11StateChanged(evt);
            }
        });
        getContentPane().add(jSlider11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 340, 130, 20));

        jComboBox12.setBackground(new java.awt.Color(157, 107, 69));
        jComboBox12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox12.setName("12"); // NOI18N
        jComboBox12.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox12ItemStateChanged(evt);
            }
        });
        jComboBox12.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox12FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox12, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 290, 240, 30));

        jLabel20.setForeground(new java.awt.Color(157, 107, 69));
        jLabel20.setText("Niveau: 1");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 310, -1, -1));

        jSlider12.setMaximum(3);
        jSlider12.setMinimum(1);
        jSlider12.setValue(1);
        jSlider12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider12.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider12StateChanged(evt);
            }
        });
        getContentPane().add(jSlider12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 290, 130, 20));

        jComboBox13.setBackground(new java.awt.Color(157, 107, 69));
        jComboBox13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox13.setName("13"); // NOI18N
        jComboBox13.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox13ItemStateChanged(evt);
            }
        });
        jComboBox13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox13FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox13, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 240, 240, 30));

        jLabel21.setForeground(new java.awt.Color(157, 107, 69));
        jLabel21.setText("Niveau: 1");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 260, -1, -1));

        jSlider13.setMaximum(3);
        jSlider13.setMinimum(1);
        jSlider13.setValue(1);
        jSlider13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider13.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider13StateChanged(evt);
            }
        });
        getContentPane().add(jSlider13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 240, 130, 20));

        jComboBox14.setBackground(new java.awt.Color(157, 107, 69));
        jComboBox14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox14.setName("14"); // NOI18N
        jComboBox14.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox14ItemStateChanged(evt);
            }
        });
        jComboBox14.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox14FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox14, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 190, 240, 30));

        jLabel22.setForeground(new java.awt.Color(157, 107, 69));
        jLabel22.setText("Niveau: 1");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 210, -1, -1));

        jSlider14.setMaximum(3);
        jSlider14.setMinimum(1);
        jSlider14.setValue(1);
        jSlider14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider14.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider14StateChanged(evt);
            }
        });
        getContentPane().add(jSlider14, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 190, 130, 20));

        jComboBox15.setBackground(new java.awt.Color(157, 107, 69));
        jComboBox15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox15.setName("15"); // NOI18N
        jComboBox15.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox15ItemStateChanged(evt);
            }
        });
        jComboBox15.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox15FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox15, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 140, 240, 30));

        jLabel23.setForeground(new java.awt.Color(157, 107, 69));
        jLabel23.setText("Niveau: 1");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 160, -1, -1));

        jSlider15.setMaximum(3);
        jSlider15.setMinimum(1);
        jSlider15.setValue(1);
        jSlider15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider15.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider15StateChanged(evt);
            }
        });
        getContentPane().add(jSlider15, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 140, 130, 20));

        jComboBox16.setBackground(new java.awt.Color(157, 107, 69));
        jComboBox16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox16.setName("16"); // NOI18N
        jComboBox16.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox16ItemStateChanged(evt);
            }
        });
        jComboBox16.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox16FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox16, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 90, 240, 30));

        jLabel24.setForeground(new java.awt.Color(157, 107, 69));
        jLabel24.setText("Niveau: 1");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 110, -1, -1));

        jSlider16.setMaximum(3);
        jSlider16.setMinimum(1);
        jSlider16.setValue(1);
        jSlider16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider16.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider16StateChanged(evt);
            }
        });
        getContentPane().add(jSlider16, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 90, 130, 20));

        jButton1.setBackground(new java.awt.Color(255, 255, 153));
        jButton1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Auswertungsbutton.png"))); // NOI18N
        jButton1.setToolTipText("Auswertung");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 20, 56, -1));

        jButton2.setBackground(new java.awt.Color(255, 255, 153));
        jButton2.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Speicherbutton.png"))); // NOI18N
        jButton2.setToolTipText("Auswertung als Datei");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jButton2StateChanged(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 20, 56, -1));

        jLabel25.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(93, 157, 69));
        jLabel25.setText("Für Niveaustufen ?-Button neben Feld klicken");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, -1));

        jLabel26.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(69, 127, 157));
        jLabel26.setText("Für Niveaustufen ?-Button neben Feld klicken");
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jButton3.setBackground(new java.awt.Color(157, 88, 69));
        jButton3.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 10)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("?");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, -1, -1));

        jButton4.setBackground(new java.awt.Color(157, 149, 69));
        jButton4.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 10)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("?");
        jButton4.setToolTipText("Was ist das MINT-Zertifikat?");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 20, -1, -1));

        jButton5.setBackground(new java.awt.Color(93, 157, 69));
        jButton5.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 10)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("?");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, -1, -1));

        jButton6.setBackground(new java.awt.Color(69, 127, 157));
        jButton6.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 10)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("?");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, -1, -1));

        jTextField1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        jTextField1.setText(" Tabelle nach Wörtern filtern...");
        jTextField1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(157, 69, 73), 2, true));
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 460, 250, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        String text = "Niveau: " + String.valueOf(jSlider1.getValue());
        jLabel4.setText(text);
    }//GEN-LAST:event_jSlider1StateChanged

    private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        String text = "Niveau: " + String.valueOf(jSlider2.getValue());
        jLabel5.setText(text);
    }//GEN-LAST:event_jSlider2StateChanged

    private void jSlider3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider3StateChanged
        String text = "Niveau: " + String.valueOf(jSlider3.getValue());
        jLabel10.setText(text);
    }//GEN-LAST:event_jSlider3StateChanged

    private void jSlider4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider4StateChanged
        String text = "Niveau: " + String.valueOf(jSlider4.getValue());
        jLabel12.setText(text);
    }//GEN-LAST:event_jSlider4StateChanged

    private void jSlider5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider5StateChanged
        String text = "Niveau: " + String.valueOf(jSlider5.getValue());
        jLabel13.setText(text);
    }//GEN-LAST:event_jSlider5StateChanged

    private void jSlider6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider6StateChanged
        String text = "Niveau: " + String.valueOf(jSlider6.getValue());
        jLabel14.setText(text);
    }//GEN-LAST:event_jSlider6StateChanged

    private void jSlider7StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider7StateChanged
        String text = "Niveau: " + String.valueOf(jSlider7.getValue());
        jLabel15.setText(text);
    }//GEN-LAST:event_jSlider7StateChanged

    private void jSlider8StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider8StateChanged
        String text = "Niveau: " + String.valueOf(jSlider8.getValue());
        jLabel16.setText(text);
    }//GEN-LAST:event_jSlider8StateChanged

    private void jSlider9StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider9StateChanged
        String text = "Niveau: " + String.valueOf(jSlider9.getValue());
        jLabel17.setText(text);
    }//GEN-LAST:event_jSlider9StateChanged

    private void jSlider10StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider10StateChanged
        String text = "Niveau: " + String.valueOf(jSlider10.getValue());
        jLabel18.setText(text);
    }//GEN-LAST:event_jSlider10StateChanged

    private void jSlider11StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider11StateChanged
        String text = "Niveau: " + String.valueOf(jSlider11.getValue());
        jLabel19.setText(text);
    }//GEN-LAST:event_jSlider11StateChanged

    private void jSlider12StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider12StateChanged
        String text = "Niveau: " + String.valueOf(jSlider12.getValue());
        jLabel20.setText(text);
    }//GEN-LAST:event_jSlider12StateChanged

    private void jSlider13StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider13StateChanged
        String text = "Niveau: " + String.valueOf(jSlider13.getValue());
        jLabel21.setText(text);
    }//GEN-LAST:event_jSlider13StateChanged

    private void jSlider14StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider14StateChanged
        String text = "Niveau: " + String.valueOf(jSlider14.getValue());
        jLabel22.setText(text);
    }//GEN-LAST:event_jSlider14StateChanged

    private void jSlider15StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider15StateChanged
        String text = "Niveau: " + String.valueOf(jSlider15.getValue());
        jLabel23.setText(text);
    }//GEN-LAST:event_jSlider15StateChanged

    private void jSlider16StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider16StateChanged
        String text = "Niveau: " + String.valueOf(jSlider16.getValue());
        jLabel24.setText(text);
    }//GEN-LAST:event_jSlider16StateChanged

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
         //Erstelle neues Zertifikat, damit sich jComboBox'en bei einer Aenderung der Wahl nicht draufaddieren
         zer = new Zertifikat();
        
        ArrayList<String> aktivNamen = new ArrayList<>();
        boolean fertig = false;
        
        
        //Pruefe zunaechst alle Felder....
        for (int i=0; i<alleA3Boxen.size();i++) {
            String akA1 = jComboBox1.getSelectedItem().toString();
            String akA2 = jComboBox2.getSelectedItem().toString();
            String akA3 = alleA3Boxen.get(i).getSelectedItem().toString();
            
            
            
            if (akA1.equals("3 Kurse, davon mindestens 1 Abiturfach auf erhöhtem Niveau mit >= 4 Wochenstunden bzw  1 Leistungskurs jeweils durchgehend in der Qualifikationsphase belegt; alle anzurechnenden Kurse >= 5 Punkte")
                    && akA3.equals("Naturwissenschaftliche Profilklasse (Falls noch nicht in Anforderungsfeld I oder II eingebracht)")) {
                JOptionPane.showMessageDialog(jFrame1, "Naturwissenschaftliche Profilklasse bereits in A1 eingetragen.");
                fertig = true;
                break;
            } else if (akA2.equals("Fachwissenschaftliche Arbeit mit mind. 10 Seiten") && akA3.equals("Fachwissenschaftliche Arbeit mit mindestens 10 Seiten oder besondere Lernleistung (s.o.)")) {
                JOptionPane.showMessageDialog(jFrame1, "Wissenschaftliche Arbeit bereis in A2 eingetragen.");
                fertig = true;
                break;
            } else if (akA2.equals("Besondere Lernleistung") && akA3.equals("Fachwissenschaftliche Arbeit mit mindestens 10 Seiten oder besondere Lernleistung (s.o.)")) {
                JOptionPane.showMessageDialog(jFrame1, "Besondere Lernleistung bereits in A2 eingetragen.");
                fertig = true;
                break;
            } else if (akA2.equals("Wissenschaftspropädeutisches Fach") && akA3.equals("wissenshaftspropädeutisches Fach oder zusätzlicher MINT-Kurs durchgängig in der Qualifikationsphase belegt (s.o)")) {
                JOptionPane.showMessageDialog(jFrame1, "Wissenschaftspropädeutisches Fach bereits in A2 eingetragen.");
                fertig = true;
                break;
            } else if(aktivNamen.contains(akA3) && !akA3.equals("Bitte wähle eine Aktivität des Anforderungsfeldes III")) { //Eine Aktivitaet wurde 2 Mal eingetragen
                JOptionPane.showMessageDialog(jFrame1, new String[] {"Eine Aktivität kann einmalig entweder in der S I oder der S II einberechnet werden.","Um Fehler in der Berechnung zu vermeiden, bitte entscheide dich für eine Bewertung der Aktivität.", "Es empfiehlt sich, die höher bewertete einzubeziehen."} );
                fertig = true;
                break;
            } else { //Kein Ausnahmefall
                if (!akA3.equals("Bitte wähle eine Aktivität des Anforderungsfeldes III")) { //Der Benutzer hat eine Aktivitaet ausgewaehlt
                    int currentSliderValue = alleA3Slider.get(i).getValue();
                    if(alleA3Boxen.get(i).getName().contains("1")) { //S2-jComboBox
                        Aktivitaet ausgewaehltS2 = S2.get(alleA3Boxen.get(i).getSelectedIndex()-1 ); //Index -1 weil das erste Objekt in der Auswahlliste immer "Bitte waehle..." ist
                        if(ausgewaehltS2.getAnforderung(currentSliderValue-1).equals("")) { //siehe naechste Zeile
                            JOptionPane.showMessageDialog(jFrame1, "Das ausgewählte Niveau der Aktivität " + akA3 + " ist nicht verfügbar.");
                            fertig = true;
                            break;
                        }
                        zer.getAnforderungsfeldDrei().aktivitaetErfuelltS2(ausgewaehltS2, currentSliderValue);
                    } else { //S1-jCombobox
                        Aktivitaet ausgewaehltS1 = S1.get(alleA3Boxen.get(i).getSelectedIndex()-1 ); //Index -1 weil das erste Objekt in der Auswahlliste immer "Bitte waehle..." ist
                        if(ausgewaehltS1.getAnforderung(currentSliderValue-1).equals("")) { //siehe naechste Zeile
                            JOptionPane.showMessageDialog(jFrame1, "Das ausgewählte Niveau der Aktivität " + akA3 + " ist nicht verfügbar.");
                            fertig = true;
                            break;
                        }
                        zer.getAnforderungsfeldDrei().aktivitaetErfuelltS1(ausgewaehltS1, currentSliderValue);
                    }
                }
                aktivNamen.add(akA3);
            }
        } 
        
        if (fertig == true) {
            //Die Schleife musste wegen einer Fehlermeldung abgebrochen werden, mache nichts mehr
        } else {
            //Jetzt noch die Anforderungsfelder I & II
            if (!jComboBox1.getSelectedItem().toString().equals("Bitte wähle eine Aktivität des Anforderungsfeldes I")) { //Der Benutzer hat eine Aktivitaet ausgewaehlt
                zer.getAnforderungsfeldEins().aktivitaetErfuellt(zer.getAnforderungsfeldEins().getErfuellbareAktivitaeten().get(jComboBox1.getSelectedIndex()-1), jSlider1.getValue());
            }
        
            if (!jComboBox2.getSelectedItem().toString().equals("Bitte wähle eine Aktivität des Anforderungsfeldes II")) { //Der Benutzer hat eine Aktivitaet ausgewaehlt
                zer.getAnforderungsfeldZwei().aktivitaetErfuellt(zer.getAnforderungsfeldZwei().getErfuellbareAktivitaeten().get(jComboBox2.getSelectedIndex()-1), jSlider2.getValue());
            }
            zer.aktualisiereAlle();
            
            //Der Beratungstext
            String[] beratungstext = zer.berate().split(" _// "); //Teilung des Textes
            String[] feldEins = beratungstext[0].split("\\  "); //Teilung des 1. Anforderungsfeldes bei doppelten Leerzeichen (Trennung der moeglichen Aktivitaeten und Anforderungen zur naechsten Stufe)
            String[] feldZwei = beratungstext[1].split("\\  "); //Teilung des 2. Anforderungsfeldes bei doppelten ( " s.o.)
            String[] feldDrei = beratungstext[2].split(", "); //Teilung des 3. Anforderungsfeldes bei den Kommata (=Aufzaehlung der Aktivitaeten)
            String[] allesZusammen = new String[feldEins.length + feldZwei.length + feldDrei.length + 1]; 
            //Vereine die Arrays zu einem (in allesZusammen)
            System.arraycopy(feldEins, 0, allesZusammen, 0, feldEins.length);
            System.arraycopy(feldZwei, 0, allesZusammen, feldEins.length, feldZwei.length);
            System.arraycopy(feldDrei, 0, allesZusammen, feldEins.length + feldZwei.length, feldDrei.length);
            allesZusammen[allesZusammen.length-1] = beratungstext[3]; //Die Gesamtstufe des Zertifikats kommt am Ende
            
            
            //Ergebnis ausgeben
            JOptionPane.showMessageDialog(jFrame1, allesZusammen);
        }
        
        
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jButton2StateChanged
        
    }//GEN-LAST:event_jButton2StateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(zer.getAnforderungsfeldEins().zertifikatsstufe == 0
           && zer.getAnforderungsfeldZwei().zertifikatsstufe == 0
           && zer.getAnforderungsfeldDrei().getGesamtPunktzahl() == 0) { //Es fand noch keine Auswertung statt
            JOptionPane.showMessageDialog(jFrame1, "Bitte vorher auswerten!");
        } else { //Es gab bereits mindestens eine Auswertung
            //Erzeuge ein Dialogfenster, damit der Nutzer selbststaendig den Dateipfad
            //und -namen seiner Auswertung bestimmen kann
            JFileChooser jFileChooser1 = new JFileChooser();
            jFileChooser1.showSaveDialog(this);
            String dateiname = jFileChooser1.getToolTipText();
            jFileChooser1.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        
            try {
                //Versuche die Datei unter gegebenen Namen zu speichern
                zer.erfuellteAktivitaetenTextdatei(jFileChooser1.getSelectedFile().getAbsolutePath());
                JOptionPane.showMessageDialog(jFrame1, "Datei wurde im ausgesuchten Pfad gespeichert." );
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(jFrame1, "Speichern der Datei fehlgeschlagen." );
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //Knopf fuer Beschreibung des Zertifikats
        String hilfetext[] = {"Das MINT-EC-Zertifikat wird auf Antrag zusammen mit dem Abiturzeugnis an Schülerinnen und Schüler vergeben, die im Laufe ihrer Schulzeit kontinuierlich\n" +
" über den Unterricht hinaus besondere Leistungen in den MINT-Fächern (Mathematik, Informatik, Naturwissenschaften, Technik) erbracht haben.\n" +
"Schülerinnen und Schüler, die die Mindestbedingungen erfüllen, beantragen bis zu dem von der Schule festgelegten Termin die Verleihung des Zertifikats mit Hilfe eines Formulars,\n"+
" einer Liste der erbrachten MINT-Leistungen sowie des ausgefüllten Dokumentationsheftes oder eines Portfolios, das Zeugniskopien, Teilnahmebescheinigungen, Wettbewerbsurkunden usw. enthält.\n" + 
"Die Schule prüft die eingereichten Unterlagen und ermittelt gemäß der Vergaberichtlinien die Gesamteinstufung des Zertifikats.\n" +
"Schülerinnen und Schüler, die das MINT-EC-Zertifikat erhalten, müssen Mindestanforderungen in den drei Anforderungsfeldern\n" +
"I 	 Fachliche Kompetenz\n" +
"II 	 Fachwissenschaftliches Arbeiten\n" +
"III 	 Zusätzliche MINT-Aktivitäten\n" +
"erfüllen.\n"+ 
"In jedem der drei Anforderungsfelder werden die Schülerleistungen einer der drei Stufen\n" +
"1 	 „mit Erfolg“\n" +
"2 	 „mit besonderem Erfolg“\n" +
"3 	 „mit Auszeichnung“\n" +
"zugeordnet.\n" + 
"Ein Zertifikat wird nur verliehen, wenn in jedem der drei Felder mindestens die Stufe 1 erreicht wurde.\n" + 
"Die Gesamteinstufung des Zertifikates ergibt sich aus dem mathematisch gerundeten Mittelwert der in den drei Anforderungsfeldern erreichten Stufen.\n" +
"Das MINT-EC-Zertifikat wird in Form einer vierseitigen Urkunde verliehen.\n" +
                 "Quelle: https://www.mint-ec.de/mint-ec-zertifikat.html ; Broschüre 'Das MINT-EC-Zertifikat' ; 16.6.2016 "};
                                
        JOptionPane.showMessageDialog(jFrame1, hilfetext );
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //Knopf fuer A2
        String hilfetext[] = {zer.getAnforderungsfeldZwei().getFokus(), 
                                "Anforderung für Stufe 1: >= 9 Notenpunkte.",
                                "Anforderung für Stufe 2: >= 11 Notenpunkte.",
                                "Anforderung für Stufe 3: >= 13 Notenpunkte.",
                                "Wenn Einbeziehung einer der möglichen Wettbewerbe: ",
                                "Anforderung für Stufe 1: Ernsthafte Teilnahme am Regionalwettbewerb.",
                                "Anforderung für Stufe 2: Preisträger im Regionalwettbewerb (keine Sonderpreise).",
                                "Anforderung für Stufe 3: Teilnahme am Landes- oder Bundeswettbewerb."};
        JOptionPane.showMessageDialog(jFrame1, hilfetext );
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Knopf fuer A3
        String hilfetext[] = {zer.getAnforderungsfeldDrei().getFokus(), 
                                "Anforderung für Stufe 1: Ab 40 Punkte, davon maximal 20 aus der SI.",
                                "Anforderung für Stufe 2: Ab 60 Punkte, davon maximal 30 aus der SI UND mindestens einmal Niveau 2 in der SII.",
                                "Anforderung für Stufe 3: Ab 80 Punkte, davon maximal 40 aus der SI UND mindestens zweimal Niveau 2 in der SII ODER einmal Niveau 3 in der SII.",
                                "Eine Aktivität kann entweder durch einer der Boxen oder direkt aus der Tabelle mit einem Rechtsklick hinzugefügt werden."};
        JOptionPane.showMessageDialog(jFrame1, hilfetext );
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        reiheHervorheben(jComboBox3);
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
        reiheHervorheben(jComboBox4);
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void jComboBox5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox5ItemStateChanged
        reiheHervorheben(jComboBox5);
    }//GEN-LAST:event_jComboBox5ItemStateChanged

    private void jComboBox6ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox6ItemStateChanged
        reiheHervorheben(jComboBox6);
    }//GEN-LAST:event_jComboBox6ItemStateChanged

    private void jComboBox7ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox7ItemStateChanged
        reiheHervorheben(jComboBox7);
    }//GEN-LAST:event_jComboBox7ItemStateChanged

    private void jComboBox8ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox8ItemStateChanged
        reiheHervorheben(jComboBox8);
    }//GEN-LAST:event_jComboBox8ItemStateChanged

    private void jComboBox9ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox9ItemStateChanged
        reiheHervorheben(jComboBox9);
    }//GEN-LAST:event_jComboBox9ItemStateChanged

    private void jComboBox16ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox16ItemStateChanged
        reiheHervorheben(jComboBox16);
    }//GEN-LAST:event_jComboBox16ItemStateChanged

    private void jComboBox15ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox15ItemStateChanged
        reiheHervorheben(jComboBox15);
    }//GEN-LAST:event_jComboBox15ItemStateChanged

    private void jComboBox14ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox14ItemStateChanged
        reiheHervorheben(jComboBox14);
    }//GEN-LAST:event_jComboBox14ItemStateChanged

    private void jComboBox13ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox13ItemStateChanged
        reiheHervorheben(jComboBox13);
    }//GEN-LAST:event_jComboBox13ItemStateChanged

    private void jComboBox12ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox12ItemStateChanged
        reiheHervorheben(jComboBox12);
    }//GEN-LAST:event_jComboBox12ItemStateChanged

    private void jComboBox11ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox11ItemStateChanged
        reiheHervorheben(jComboBox11);
    }//GEN-LAST:event_jComboBox11ItemStateChanged

    private void jComboBox10ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox10ItemStateChanged
        reiheHervorheben(jComboBox10);
    }//GEN-LAST:event_jComboBox10ItemStateChanged

    private void jComboBox3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox3FocusGained
        reiheHervorheben(jComboBox3);
    }//GEN-LAST:event_jComboBox3FocusGained

    private void jComboBox4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox4FocusGained
        reiheHervorheben(jComboBox4);
    }//GEN-LAST:event_jComboBox4FocusGained

    private void jComboBox5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox5FocusGained
        reiheHervorheben(jComboBox5);
    }//GEN-LAST:event_jComboBox5FocusGained

    private void jComboBox6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox6FocusGained
        reiheHervorheben(jComboBox6);
    }//GEN-LAST:event_jComboBox6FocusGained

    private void jComboBox7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox7FocusGained
        reiheHervorheben(jComboBox7);
    }//GEN-LAST:event_jComboBox7FocusGained

    private void jComboBox8FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox8FocusGained
        reiheHervorheben(jComboBox8);
    }//GEN-LAST:event_jComboBox8FocusGained

    private void jComboBox9FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox9FocusGained
        reiheHervorheben(jComboBox9);
    }//GEN-LAST:event_jComboBox9FocusGained

    private void jComboBox10FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox10FocusGained
        reiheHervorheben(jComboBox10);
    }//GEN-LAST:event_jComboBox10FocusGained

    private void jComboBox11FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox11FocusGained
        reiheHervorheben(jComboBox11);
    }//GEN-LAST:event_jComboBox11FocusGained

    private void jComboBox12FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox12FocusGained
        reiheHervorheben(jComboBox12);
    }//GEN-LAST:event_jComboBox12FocusGained

    private void jComboBox13FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox13FocusGained
        reiheHervorheben(jComboBox13);
    }//GEN-LAST:event_jComboBox13FocusGained

    private void jComboBox14FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox14FocusGained
        reiheHervorheben(jComboBox14);
    }//GEN-LAST:event_jComboBox14FocusGained

    private void jComboBox15FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox15FocusGained
        reiheHervorheben(jComboBox15);
    }//GEN-LAST:event_jComboBox15FocusGained

    private void jComboBox16FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox16FocusGained
        reiheHervorheben(jComboBox16);
    }//GEN-LAST:event_jComboBox16FocusGained

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //Knopf fuer A1
        String hilfetext[] = {zer.getAnforderungsfeldEins().getFokus(), 
                                "Anforderung für Stufe 1: Mittelwert aller anzurechnender Kurse >= 9 Notenpunkte.",
                                "Anforderung für Stufe 2: Mittelwert aller anzurechnender Kurse >= 11 Notenpunkte.",
                                "Anforderung für Stufe 3: Mittelwert aller anzurechnender Kurse >= 13 Notenpunkte."};
        JOptionPane.showMessageDialog(jFrame1, hilfetext );
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        if (SwingUtilities.isRightMouseButton(evt)) {
            //Wechsel den Fokus
            jTable1.requestFocusInWindow();
            //Markiere die angeklickte Aktivitaet
            Point p = evt.getPoint(); //Kriege die Koordinaten vom Mausklick
            int reihenIndex = jTable1.rowAtPoint(p); //Die Reihe, die die Koordinate enthaelt
            jTable1.setRowSelectionInterval(reihenIndex, reihenIndex);

            //Setze das Menue auf Startzustand
            jPopupMenu1.removeAll();

            //Fuege die Auswahlmoeglichkeiten hinzu
            jPopupMenu1.add(jMenuItem1);
            jPopupMenu1.add(jMenuItem2);
            jPopupMenu1.add(jSeparator1);
            jPopupMenu1.add(jMenuItem3);

            //Zeige das Menue an
            jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable1MouseReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        //Welche Aktivitaet wurde markiert?
        int reihenIndex = jTable1.getSelectedRow();
        String aktivitaet = jTable1.getValueAt(reihenIndex, 1).toString();

        if (KEINES1AKTIVITAETEN.contains(aktivitaet)) { //ungueltige Aktivitaet; siehe naechste Zeile
            JOptionPane.showMessageDialog(jFrame1, "Diese Aktivität lässt sich nicht in der SI absolvieren.");
        } else { //gueltige Aktivitaet
            //Gehe die Comboboxen der SI durch, um zu schauen, ob fuer jede bereits jeweils eine Aktivitaet ausgewaehlt wurde.
            //Fuege wenn moeglich die Aktivitaet zu der erstgefundensten unausgewaehlten Box hinzu.
            //Sonst gebe eine Meldung aus, dass alle Boxen bereits eine Aktivitaet ausgewaehlt haben.
            for (int i = 0; i < 7; i++) {
                if (alleA3Boxen.get(i).getSelectedItem().equals("Bitte wähle eine Aktivität des Anforderungsfeldes III")) { //Eine Box ohne ausgewaehlte Aktivitaet
                    alleA3Boxen.get(i).setSelectedItem(aktivitaet);
                    alleA3Slider.get(i).requestFocusInWindow();
                    break;
                }
                if (i == 6) {
                    //Es wurde keine leere Box gefunden
                    JOptionPane.showMessageDialog(jFrame1, "Alle Auswahlboxen der SI haben bereits eine Aktivität!");
                }
            }
        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        //Welche Aktivitaet wurde markiert?
        int reihenIndex = jTable1.getSelectedRow();
        String aktivitaet = jTable1.getValueAt(reihenIndex, 1).toString();

        if (KEINES2AKTIVITAETEN.contains(aktivitaet)) {
            JOptionPane.showMessageDialog(jFrame1, "Diese Aktivität lässt sich nicht in der SII absolvieren.");
        } else {
            //Gehe die Comboboxen der SII durch, um zu schauen, ob fuer jede bereits jeweils eine Aktivitaet ausgewaehlt wurde.
            //Fuege wenn moeglich die Aktivitaet zu der erstgefundensten unausgewaehlten Box hinzu.
            //Sonst gebe eine Meldung aus, dass alle Boxen bereits eine Aktivitaet ausgewaehlt haben.
            for (int i = 13; i > 6; i--) {
                if (alleA3Boxen.get(i).getSelectedItem().equals("Bitte wähle eine Aktivität des Anforderungsfeldes III")) { //Eine Box ohne ausgewaehlte Aktivitaet
                    alleA3Boxen.get(i).setSelectedItem(aktivitaet);
                    alleA3Slider.get(i).requestFocusInWindow();
                    break;
                }
                if (i == 7) {
                    //Es wurde keine leere Box gefunden
                    JOptionPane.showMessageDialog(jFrame1, "Alle Auswahlboxen der SII haben bereits eine Aktivität!");
                }
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        //Setze alle A3-Boxen und ihre Regler auf Anfangszustand
        for (int i = 0; i < alleA3Boxen.size(); i++) {
            alleA3Boxen.get(i).setSelectedItem("Bitte wähle eine Aktivität des Anforderungsfeldes III");
            alleA3Slider.get(i).setValue(1);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        //Code siehe http://stackoverflow.com/a/22067320
        jTextField1.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = jTextField1.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = jTextField1.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("");
            }
        });
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        //Das Textfield wurde erstmalig ausgewaehlt
        if(jTextField1.getText().equals(" Tabelle nach Wörtern filtern...")) {
            jTextField1.setText("");
        }
    }//GEN-LAST:event_jTextField1FocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    
    /**
     * Hebt die Reihe einer ausgewaehlten Aktivitaet hervor, indem sie markiert wird und ggf. an erster Stelle steht 
     */
    private void reiheHervorheben(JComboBox box) {
        String ausgewaehlteAkt = box.getSelectedItem().toString(); 
        int ausgewaehlteBox = (int) Integer.parseInt(box.getName()); 
        
        if(ausgewaehlteAkt.equals("Bitte wähle eine Aktivität des Anforderungsfeldes III")) { //Der Nutzer hat die Komponente zurueck auf den Anfangszustand gesetzt, also keine Aktivitaet
            //Loesche alte Auswahl
            int alteReiheIndex = reihenindexPuffer[ausgewaehlteBox-3];
            jTable1.removeRowSelectionInterval(alteReiheIndex, alteReiheIndex);
        }
        
        for (int i=0; i<jTable1.getRowCount(); i++) {
            String ausgewaehlteReihe = jTable1.getValueAt(i, 1).toString();
            if (ausgewaehlteAkt.equals(ausgewaehlteReihe)) {
                jTable1.setRowSelectionInterval(i, i); //markiere ausgewaehlte Akitivitaet in der Liste
                jTable1.scrollRectToVisible(new Rectangle(jTable1.getCellRect(i, 0, true))); //autoscrolle zu der Aktivitaet, so dass diese immer nach dem Auswaehlen sichtbar ist
                reihenindexPuffer[ausgewaehlteBox-3] = i;
            }
        }
    }
    
    
    /**
     * Fuellt die Tabelle mit den Aktivitaeten.
     */
    private void initalisiereJTable() {
        ArrayList<Aktivitaet> taeten = zer.getAnforderungsfeldDrei().getErfuellbareAktivitaeten();
        int aktisize = taeten.size();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        for (int reihe=0; reihe<aktisize; reihe++) {
            if (zer.getAnforderungsfeldDrei().getErfuellbareAktivitaeten().get(reihe).isIstWettbewerb() == true) { //Die Aktivitaet ist ein Wettbewerb
                Object[] aktiDaten = {"Wettbewerb", taeten.get(reihe).getName(), taeten.get(reihe).getAnforderung(0), taeten.get(reihe).getAnforderung(1), taeten.get(reihe).getAnforderung(2)}; //Alle Aktivitaetsdaten fuer eine Reihe
                model.addRow(aktiDaten);
            } else { //Die Aktivitaet ist kein Wettbewerb
                Object[] aktiDaten = {"Lehr- und Lernveranstaltungen", taeten.get(reihe).getName(), taeten.get(reihe).getAnforderung(0), taeten.get(reihe).getAnforderung(1), taeten.get(reihe).getAnforderung(2)}; //Alle Aktivitaetsdaten fuer eine Reihe
                model.addRow(aktiDaten);
            }
        }
    }
    
    /**
     * Fasst die Initialisation der hinzugefuegten Komponenten zusammen.
     */
    private void initialisiereMeineElemente() {
        zer = new Zertifikat();
        initalisiereJTable();
        initialisiereAlleCombo();
        addAlleA3Boxen();
        addAlleJ3Slider();
        setzeIcon();
        aendereThumbs();
        jTable1.getTableHeader().setDefaultRenderer(new HeaderColor()); 
        this.rowSorter = new TableRowSorter<>(jTable1.getModel());
        jTable1.setRowSorter(rowSorter);
    }
    
    /**
     * Fasst die Neuinitialisierung der JSlider thumbs zusammen
     */
    private void aendereThumbs() {
        jSlider1.setUI(new CustomSliderUI(jSlider1,69,127,157)); //blau
        jSlider2.setUI(new CustomSliderUI(jSlider1,93,157,69)); //gruen
        jSlider3.setUI(new CustomSliderUI(jSlider1,157,69,73)); //rot
        jSlider4.setUI(new CustomSliderUI(jSlider1,157,69,73)); //rot
        jSlider5.setUI(new CustomSliderUI(jSlider1,157,69,73)); //rot
        jSlider6.setUI(new CustomSliderUI(jSlider1,157,69,73)); //rot
        jSlider7.setUI(new CustomSliderUI(jSlider1,157,69,73)); //rot
        jSlider8.setUI(new CustomSliderUI(jSlider1,157,69,73)); //rot
        jSlider9.setUI(new CustomSliderUI(jSlider1,157,69,73)); //rot
        jSlider10.setUI(new CustomSliderUI(jSlider1,157,107,69)); //orange
        jSlider11.setUI(new CustomSliderUI(jSlider1,157,107,69)); //orange
        jSlider12.setUI(new CustomSliderUI(jSlider1,157,107,69)); //orange
        jSlider13.setUI(new CustomSliderUI(jSlider1,157,107,69)); //orange
        jSlider14.setUI(new CustomSliderUI(jSlider1,157,107,69)); //orange
        jSlider15.setUI(new CustomSliderUI(jSlider1,157,107,69)); //orange
        jSlider16.setUI(new CustomSliderUI(jSlider1,157,107,69)); //orange
    }
    
    /**
     * Fasst die Initialisierung aller ComboBox'en zusammen
     */
    private void initialisiereAlleCombo() {
        initialisiereA1Combo();
        initialisiereA2Combo();
        initialisiereA3S1Combo(jComboBox3);
        initialisiereA3S1Combo(jComboBox4);
        initialisiereA3S1Combo(jComboBox5);
        initialisiereA3S1Combo(jComboBox6);
        initialisiereA3S1Combo(jComboBox7);
        initialisiereA3S1Combo(jComboBox8);
        initialisiereA3S1Combo(jComboBox9);
        initialisiereA3S2Combo(jComboBox10);
        initialisiereA3S2Combo(jComboBox11);
        initialisiereA3S2Combo(jComboBox12);
        initialisiereA3S2Combo(jComboBox13);
        initialisiereA3S2Combo(jComboBox14);
        initialisiereA3S2Combo(jComboBox15);
        initialisiereA3S2Combo(jComboBox16);
    }
    
    /**
     * Alle JComboBox'en kommen in die Liste alleA3Boxen
     */
    private void addAlleA3Boxen() {
        alleA3Boxen.add(jComboBox3);
        alleA3Boxen.add(jComboBox4);
        alleA3Boxen.add(jComboBox5);
        alleA3Boxen.add(jComboBox6);
        alleA3Boxen.add(jComboBox7);
        alleA3Boxen.add(jComboBox8);
        alleA3Boxen.add(jComboBox9);
        alleA3Boxen.add(jComboBox10);
        alleA3Boxen.add(jComboBox11);
        alleA3Boxen.add(jComboBox12);
        alleA3Boxen.add(jComboBox13);
        alleA3Boxen.add(jComboBox14);
        alleA3Boxen.add(jComboBox15);
        alleA3Boxen.add(jComboBox16);
    }
    
    /**
     * Alle JSlider kommen in die Liste alleA3Slider
     */
    private void addAlleJ3Slider() {
        alleA3Slider.add(jSlider3);
        alleA3Slider.add(jSlider4);
        alleA3Slider.add(jSlider5);
        alleA3Slider.add(jSlider6);
        alleA3Slider.add(jSlider7);
        alleA3Slider.add(jSlider8);
        alleA3Slider.add(jSlider9);
        alleA3Slider.add(jSlider10);
        alleA3Slider.add(jSlider11);
        alleA3Slider.add(jSlider12);
        alleA3Slider.add(jSlider13);
        alleA3Slider.add(jSlider14);
        alleA3Slider.add(jSlider15);
        alleA3Slider.add(jSlider16);
    }
    
    /**
     * Fuellt die ComboBox mit den Aktivitaeten des Anforderungsfeldes 1
     */
    private void initialisiereA1Combo() {
        jComboBox1.addItem("Bitte wähle eine Aktivität des Anforderungsfeldes I");
        for (Aktivitaet erfuellbareAktivitaeten : zer.getAnforderungsfeldEins().erfuellbareAktivitaeten) {
            jComboBox1.addItem(erfuellbareAktivitaeten.getName());
        }
        adjustScrollBar(jComboBox1);
    }
    
    /**
     * Fuellt die ComboBox mit den Aktivitaeten des Anforderungsfeldes 2
     */
    private void initialisiereA2Combo() {
        jComboBox2.addItem("Bitte wähle eine Aktivität des Anforderungsfeldes II");
        for (Aktivitaet erfuellbareAktivitaeten : zer.getAnforderungsfeldZwei().erfuellbareAktivitaeten) {
            jComboBox2.addItem(erfuellbareAktivitaeten.getName());
        }
        adjustScrollBar(jComboBox2);
    }
    
    /**
     * Fuellt die ComboBox der S1 mit den Aktivitaeten des Anforderungsfeldes 3
     */
    private void initialisiereA3S1Combo(JComboBox box) {
        box.addItem("Bitte wähle eine Aktivität des Anforderungsfeldes III");
        for (Aktivitaet erfuellbareAktivitaeten : zer.getAnforderungsfeldDrei().erfuellbareAktivitaeten) {
            if ((KEINES1AKTIVITAETEN.contains(erfuellbareAktivitaeten.getName()))) {
                //Die Aktivitaeten duerfen nicht in die JComboBox fuer die S1
            } else {
                box.addItem(erfuellbareAktivitaeten.getName());
                S1.add(erfuellbareAktivitaeten);
            }
        }
        adjustScrollBar(box);
    }
    
    /**
     * Fuellt die ComboBox der S2 mit den Aktivitaeten des Anforderungsfeldes 3
     */
    private void initialisiereA3S2Combo(JComboBox box) {
        box.addItem("Bitte wähle eine Aktivität des Anforderungsfeldes III");
        for (Aktivitaet erfuellbareAktivitaeten : zer.getAnforderungsfeldDrei().erfuellbareAktivitaeten) {
            if ((KEINES2AKTIVITAETEN.contains(erfuellbareAktivitaeten.getName()))) {
            //Die Aktivitaeten duerfen nicht in die JComboBox fuer die S2
            } else {
                box.addItem(erfuellbareAktivitaeten.getName());
                S2.add(erfuellbareAktivitaeten);
            }
        }
        adjustScrollBar(box);
    }
    
    /**
     * Fuegt den JComboBox'en horizontale Rollleisten hinzu.
     * @see https://community.oracle.com/thread/1775495?tstart=0
     * @param box Die JComboBox, die eine horizontale Rolleiste bekommen soll
     */
    private void adjustScrollBar(JComboBox box) {
        if (box.getItemCount() == 0) return;
        Object comp = box.getUI().getAccessibleChild(box, 0);
        if (!(comp instanceof JPopupMenu)) {
            return;
        }
        JPopupMenu popup = (JPopupMenu) comp;
        JScrollPane scrollPane = (JScrollPane) popup.getComponent(0);
        scrollPane.setHorizontalScrollBar(new JScrollBar(JScrollBar.HORIZONTAL));
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
    }
    
    /**
     * Fuegt dem Programm ein individuelles Icon hinzu und ersetzt das Java-Icon 
     */
    private void setzeIcon() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resource/icon.png")));
    }
    
    
    /**
     * Benutze einen Renderer, um die Farbe der Tabelle zu aendern (hier zu einem roten Hintergrund und weißer Schrift)
     */
    static public class HeaderColor extends DefaultTableCellRenderer {
        public HeaderColor() {
            setOpaque(true);
        }
        
        public Component getTableCellRendererComponent (JTable mytable, Object value, boolean selected, boolean focus, int row, int column) {
            super.getTableCellRendererComponent(mytable, value, selected, focus, row, column);
            setBackground(new java.awt.Color(157,69,73)); //rot
            setForeground(new java.awt.Color(255, 255, 255)); //weiß
            return this;
        }
    }
    
    /**
    * Aendere das Aussehen des JSlider thumbs
    * @see http://stackoverflow.com/a/12297384/714968
    */
    public class CustomSliderUI extends BasicSliderUI {
        int color1;
        int color2;
        int color3;
        private BasicStroke stroke = new BasicStroke(1f, BasicStroke.CAP_ROUND, 
            BasicStroke.JOIN_ROUND, 0f, new float[]{1f, 2f}, 0f);

        public CustomSliderUI(JSlider b, int c1, int c2, int c3) {
            super(b);
            color1 = c1;
            color2 = c2;
            color3 = c3;
        }

        @Override
        public void paint(Graphics g, JComponent c) {
            Graphics2D g2d = (Graphics2D) g;
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, 
                RenderingHints.VALUE_ANTIALIAS_ON);
            super.paint(g, c);
        }

        @Override
        protected Dimension getThumbSize() {
            return new Dimension(15, 16);
        }
        
        @Override
        public void paintThumb(Graphics g) {
            Graphics2D g2d = (Graphics2D) g;
            int x1 = thumbRect.x + 2;
            int x2 = thumbRect.x + thumbRect.width - 2;
            int width = thumbRect.width - 4;
            int topY = thumbRect.y + thumbRect.height / 2 - thumbRect.width / 3;
            GeneralPath shape = new GeneralPath(GeneralPath.WIND_EVEN_ODD);
            shape.moveTo(x1, topY);
            shape.lineTo(x2, topY);
            shape.lineTo((x1 + x2) / 2, topY + width);
            shape.closePath();
            g2d.setPaint(new Color(color1,color2,color3));
            g2d.fill(shape);
            Stroke old = g2d.getStroke();
            g2d.setStroke(new BasicStroke(2f));
            g2d.setPaint(new Color(color1, color2, color3));
            g2d.draw(shape);
            g2d.setStroke(old);
        }
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox10;
    private javax.swing.JComboBox<String> jComboBox11;
    private javax.swing.JComboBox<String> jComboBox12;
    private javax.swing.JComboBox<String> jComboBox13;
    private javax.swing.JComboBox<String> jComboBox14;
    private javax.swing.JComboBox<String> jComboBox15;
    private javax.swing.JComboBox<String> jComboBox16;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider10;
    private javax.swing.JSlider jSlider11;
    private javax.swing.JSlider jSlider12;
    private javax.swing.JSlider jSlider13;
    private javax.swing.JSlider jSlider14;
    private javax.swing.JSlider jSlider15;
    private javax.swing.JSlider jSlider16;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JSlider jSlider4;
    private javax.swing.JSlider jSlider5;
    private javax.swing.JSlider jSlider6;
    private javax.swing.JSlider jSlider7;
    private javax.swing.JSlider jSlider8;
    private javax.swing.JSlider jSlider9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    
    
}
